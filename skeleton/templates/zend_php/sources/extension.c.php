/*
 * @author <?=$authors?> 
 * @contributors <?=$contributors?> 
 * 
 * @license 
 * This file is part of <?=$extension?> check the LICENSE file for information.
 * 
 * @description
 * Main start point for the <?=$extension?> php extension
 * 
 * @note
 * This file is auto-generated by PEG.
*/

#include "php_<?=strtolower($extension)?>.h"
#include "functions.h"
#include "enums.h"
#include "all_headers.h"

/**
 * Initialize global objects and resources
 */
PHP_RINIT_FUNCTION(php_<?=$extension?>)
{
    static int initialization = 0;
    
    /**
     * Space reserved for the initialization of global object 
     * constants, since the php engine doesnt initializes the object
     * store prior to calling extensions MINIT function.
     */
     
    if(initialization < 1)
    {
     
        <?php print $object_constants ?>
        
        initialization = 1;
    }
        
    return SUCCESS;
}

PHP_MINIT_FUNCTION(php_<?=$extension?>)
{
    zend_class_entry ce; /* Temporary variable used to initialize class entries */
    
    /*
     * Initialization of Peg Enum's parent class.
     */
    register_enum_class(module_number TSRMLS_CC);
    
    /**
     * Space reserved for the initialization of autogenerated classes,
     * class enumerations and global constants
     */

    <?php print $classes ?>
    
    return SUCCESS;
}

/**
 * UnInitialize resources
 */
PHP_MSHUTDOWN_FUNCTION(php_<?=$extension?>)
{
    return SUCCESS;
}

/**
 * TODO: Automate the process of updating versions number
 * Show version information to phpinfo()
 */
PHP_MINFO_FUNCTION(php_<?=$extension?>)
{
    php_info_print_table_start();
    php_info_print_table_header(2, PHP_<?=strtoupper($extension)?>_EXTNAME, "enabled");
    php_info_print_table_row(2, "Extension Version", PHP_<?=strtoupper($extension)?>_EXTVER);
    php_info_print_table_end();
}


/**
 * Declaration of <?=$extension?> module
 */
zend_module_entry <?=$extension?>_module_entry = {
    STANDARD_MODULE_HEADER,
    PHP_<?=strtoupper($extension)?>_EXTNAME,
    NULL,                                /* Functions (module functions) */
    PHP_MINIT(php_<?=$extension?>),      /* MINIT (module initialization function) */
    PHP_MSHUTDOWN(php_<?=$extension?>),  /* MSHUTDOWN (module shutdown function) */
    PHP_RINIT(php_<?=$extension?>),      /* RINIT (request initialization function) */
    NULL,                                /* RSHUTDOWN (request shutdown function) */
    PHP_MINFO(php_<?=$extension?>),      /* MINFO (module information function) */
    PHP_<?=strtoupper($extension)?>_EXTVER,
    STANDARD_MODULE_PROPERTIES
};

/**
 * Declare get_module function for <?=$extension?> called by PHP runtime.
 * Here the extension name is resolved to <?=$extension?>_module_entry by
 * ZEND_GET_MODULE.
 */
#ifdef COMPILE_DL_<?=strtoupper($extension)?> 
BEGIN_EXTERN_C()
ZEND_GET_MODULE(<?=$extension?>)
END_EXTERN_C()
#endif

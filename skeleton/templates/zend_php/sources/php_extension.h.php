/*
 * @author <?=$authors?>
 * @contributors <?=$contributors?>
 * 
 * @license 
 * This file is part of <?=$extension?> check the LICENSE file for information.
 * 
 * @description
 * <?=$extension?> php extension declarations file
 * 
 * @note
 * This file is auto-generated by PEG.
*/

//Prevent double inclusion 
#ifndef <?=strtoupper($extension)?>_PHP_<?=strtoupper($extension)?>_H_GUARD
#define <?=strtoupper($extension)?>_PHP_<?=strtoupper($extension)?>_H_GUARD

#include "common.h"

/**
 * Define Extension Properties 
 */
#define PHP_<?=strtoupper($extension)?>_EXTNAME   "<?=$extension?>"
#define PHP_<?=strtoupper($extension)?>_EXTVER    "0.1"

/**
 * Import configure options when building outside 
 * of the PHP source tree 
 */
#ifdef HAVE_CONFIG_H
	#include "config.h"
#endif

/** 
 * Include PHP Standard Header 
 */
#include "php.h"

/**
 * Define the entry point symbol
 * Zend will use when loading this module
 */
extern zend_module_entry <?=$extension?>_module_entry;
#define phpext_<?=$extension?>_ptr &<?=$extension?>_module_entry

/**
 * Custom function to register objects as constants
 */
#define <?=strtoupper($extension)?>_REGISTER_OBJECT_CONSTANT(name, object, flags)  <?=$extension?>_register_object_constant((name), sizeof(name), (object), (flags), module_number TSRMLS_CC)
BEGIN_EXTERN_C()
void <?=$extension?>_register_object_constant(const char *name, uint name_len, zval object, int flags, int module_number TSRMLS_DC);
END_EXTERN_C()

/**
 * Custom zend_method_call function to call methods with more than 2 parameters
 */
BEGIN_EXTERN_C()
int <?=$extension?>_call_method(zval **object_pp, zend_class_entry *obj_ce, zend_function **fn_proxy, const char *function_name, int function_name_len, zval **retval_ptr_ptr, int param_count, zval*** params TSRMLS_DC);
END_EXTERN_C()

/**
 * Space reserved for autogenerated class method binding prototype declarations 
 */
<?=$entries?>


#endif //<?=strtoupper($extension)?>_PHP_<?=strtoupper($extension)?>_H_GUARD
